# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#   name: thefakeapi-ingress
#   namespace: default
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: localhost
#       http:
#         paths:
#           - path: /thefakeapi
#             pathType: Prefix
#             backend:
#               service:
#                 name: thefakeapi-service
#                 port: 
#                   number: 80
# ---
# # apiVersion: v1
# # kind: Secret
# # metadata: ...
# # data: ...
# # immutable: true
# # env[].valueFrom.secretKeyRef
# # ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: thefakeapi-service
#   namespace: default
# spec:
#   selector:
#     app: thefakeapi
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 3000
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: thefakeapi
# spec:
#   selector:
#     matchLabels:
#       app: thefakeapi
#   template:
#     metadata:
#       labels:
#         app: thefakeapi
#     spec:
#       containers:
#       - name: thefakeapi
#         image: pearlyna/backendapi:1.0
#         resources:
#           limits:
#             memory: "128Mi"
#             cpu: "500m"
#         env:
#         - name: MONGODB_STR
#           value: mongodb://user:pass@localhost:27017
#         - name: PORT
#           value: "3000"
#         - name: APITOKEN
#           value: itsjustatokensir
#         ports:
#         - containerPort: 3000
#       - name: mongodb
#         image: mongodb/mongodb-community-server
#         env:
#         - name: MONGO_INITDB_ROOT_USERNAME
#           value: user
#         - name: MONGO_INITDB_ROOT_PASSWORD
#           value: pass
#         resources:
#           limits:
#             memory: "500Mi"
#             cpu: "1"
#         ports:
#         - containerPort: 27017
---
apiVersion: v1
kind: Pod
metadata:
  name: thefakeapi-pod
  labels:
    name: thefakeapi
    app: thefakeapi
spec:
  containers:
  - name: thefakeapi
    image: pearlyna/backendapi:1.0
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 3000
    livenessProbe:
      httpGet:
        path: /thefakeapi
        port: 3000
    env:
        - name: MONGODB_STR
          value: mongodb://user:pass@mongodb-service.default.svc.cluster.local:27017
        - name: PORT
          value: "3000"
        - name: APITOKEN
          value: itsjustatokensir
---
apiVersion: v1
kind: Pod
metadata:
  name: mongodb-pod
  labels:
    name: mongodb
    app: mongodb
spec:
  containers:
  - name: mongodb
    image: mongodb/mongodb-community-server
    env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: user
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: pass
    resources:
      limits:
        memory: "500Mi"
        cpu: "1"
    ports:
    - containerPort: 27017
---
apiVersion: v1
kind: Pod
metadata:
  name: testbusy
  labels:
    name: testbusy
spec:
  containers:
  - name: testbusy
    image: alpine:3.12
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    # command: ["curl"]
    # args: ["-v", "telnet://mongod-pod.default.svc.cluster.local:27017"]
    command: [ "sh", "-c", "tail -f /dev/null" ]
    